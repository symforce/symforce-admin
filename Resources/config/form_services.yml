services:
    
    app.validator.loader:
        class: Symforce\AdminBundle\Compiler\Loader\ValidatorLoader
        calls:
            - [ setAdminLoader, ["@sf.admin.loader"] ]
        tags:
            - { name: "validator.constraint_validator", alias: "validator.admin_validator" }
            
    # form.extension
    
    app.form.extension.inline_help:
        class: Symforce\AdminBundle\Form\Extension\InlineHelpTypeExtension
        arguments: [ [] ]
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type_extension, alias: form }
         
    app.form.extension.dynamic:
        class: Symforce\AdminBundle\Form\Extension\DynamicViewTypeExtension
        arguments: [ [] ]
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type_extension, alias: form }
         
    # form.type
    app.form.type.tree:
        class: Symforce\AdminBundle\Form\Type\TreeType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: apptree }
            
    app.form.type.route:
        class: Symforce\AdminBundle\Form\Type\RouteType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: approute }
            
    app.form.type.template:
        class: Symforce\AdminBundle\Form\Type\TemplateType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: apptemplate }
    
    app.form.type.color:
        class: Symforce\AdminBundle\Form\Type\ColorType
        tags:
            - { name: form.type, alias: appcolor }
        
    app.form.type.dynamic:
        class: Symforce\AdminBundle\Form\Type\DynamicType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appdynamic }
            
    app.form.type.referer:
        class: Symforce\AdminBundle\Form\Type\RefererType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appreferer }
            
    app.form.type.datetime:
        class: Symforce\AdminBundle\Form\Type\DateTimeType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appdatetime }
            
    app.form.type.file:
        class: Symforce\AdminBundle\Form\Type\FileType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appfile }
           
    app.form.type.image:
        class: Symforce\AdminBundle\Form\Type\ImageType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appimage }
           
    app.form.type.html:
        class: Symforce\AdminBundle\Form\Type\HtmlType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: apphtml }
            
    app.form.type.password:
        class: Symforce\AdminBundle\Form\Type\PasswordType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: apppassword }
            
    app.form.type.embed:
        class: Symforce\AdminBundle\Form\Type\EmbedType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appembed }
            
    app.form.type.entity:
        class: Symforce\AdminBundle\Form\Type\EntityType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appentity }
            
    app.form.type.workflow:
        class: Symforce\AdminBundle\Form\Type\WorkflowType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appworkflow }

    app.form.type.owner:
        class: Symforce\AdminBundle\Form\Type\OwnerType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appowner }
            
    app.form.type.view:
        class: Symforce\AdminBundle\Form\Type\ViewType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appview }
            
    app.form.type.checkbox:
        class: Symforce\AdminBundle\Form\Type\CheckboxType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appcheckbox }
            
    app.form.type.captcha:
        class: Symforce\AdminBundle\Form\Type\CaptchaType
        arguments: [ "@session", "@gregwar_captcha.generator", "@translator", %gregwar_captcha.config% ]
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appcaptcha }
         
    app.form.type.group:
        class: Symforce\AdminBundle\Form\Type\GroupType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appgroup }
            
    app.form.type.range:
        class: Symforce\AdminBundle\Form\Type\RangeType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: apprange }
            
    app.form.type.combobox:
        class: Symforce\AdminBundle\Form\Type\ComboboxType
        calls:
            - [ setContainer, ["@service_container"] ]
        tags:
            - { name: form.type, alias: appcombobox }
            
            
            